<%= javascript_include_tag params[:static_pages] %>
<%= stylesheet_link_tag "static_pages" %>
	
<div id="frame-id" class="frame">



		<span class="helper"></span><div class="logo"><img src="/assets/corpsquare.png" /></div>

		<div id="input-location-div">
			<input type="text" id="input-location" placeholder="Where are you going?">
      <button id="submit-location-button" type="button">Search</button>
			<div class="tagline">Traveling? Find out where your coworkers have been to help you figure out where to go.</div>

			<div class="powered-by">Powered by <img src="../assets/concur.png" align="middle"></div>
		</div>
</div>

<script>
  var entriesJson = <%= @expenseEntries.to_s.html_safe %>;
  var venues = [];
  var inputLocation;
  entriesJson['entries'].forEach(function(entry, index, array){
      var venue = {}
      var results = entry['VendorDescription'].split(',');
      venue['name'] = results[0];
      venue['city'] = results[1];
      venue['amount'] = entry['ApprovedAmount'];
      venues.push(venue);
  });

// global variables
  var venueReadyCount = 0;
  var placesvisited;
  var centerLatlng;
  var mapOptions;
  var map;
  var venuesByLocation = [];
  var expenses = new Array();
  var query = "&query=cronut";
  //New York hard coded, change
  var baseurl = "https://api.foursquare.com/v2/venues/search?near=New York, NY&oauth_token=EKPQAGKVMLBNB2VCDWREWFSJJHNCRGRQEEEKJTJ10JS5E0WY&v=20140503"

  
  var waitUntil = function (fn, condition, interval) {
	    interval = interval || 100;

	    var shell = function () {
	            var timer = setInterval(
	                function () {
	                    var check;

	                    try { check = !!(condition()); } catch (e) { check = false; }

	                    if (check) {
	                        clearInterval(timer);
	                        delete timer;
	                        fn();
	                    }
	                },
	                interval
	            );
	        };

	    return shell;
	};

  function populateVenues() {
  	//console.log('venues');
  	//console.log(venues);

    venues.forEach(function(venue,index)
    {

      query = "&query="+venue.name;
      //console.log('venue.name: '+venue.name);
      $.get( baseurl + query, function( data ) {
      	//console.log('data.response.venues[0]');
      	//console.log(data.response.venues[0]);
        venue['latitude'] = data.response.venues[0].location.lat;
        venue['longitude'] = data.response.venues[0].location.lng;
        venue['address'] = data.response.venues[0].location.address;
        console.log(venue);
        //$( ".inner" ).append( "<p>Name:"+venue.name +"  lat:"+ venue.latitude +"  lng:"+ venue.longitude + "<\p> END");
      }).done(function() {
      	venueReadyCount += 1;
      	console.log(venueReadyCount);
      });
    });
  }

  var getVenuesByLocation = function(inputLocation) {
    //console.log('inside getVenuesByLocation');
    //console.log('venues:');
    //console.log(venues);
    venues.forEach(function(venue, index){
      //console.log('inside venues forEach');
        if(venue.city.toLowerCase() === inputLocation.toLowerCase()) {
          //console.log('venue:');
          //console.log(venue);
          venuesByLocation.push(venue);
          //console.log('venuesByLocation');
          //console.log(venuesByLocation);
        }
    });
  }

  var initializeMap = function(){
    placesvisited = ["-10.238278,40.044677", "-10.238278,110.044800"];
    startingLat = venuesByLocation[0].latitude;
    startingLong = venuesByLocation[0].longitude;
    centerLatlng = new google.maps.LatLng(startingLat,startingLong);
    mapOptions = {
      zoom: 12,
      center: centerLatlng
    };
    map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
  }

  function drawMarker(lat, lng, vendorName, amount) {
    var myLatlng = new google.maps.LatLng(lat,lng);
    amount = parseFloat(amount).toFixed(2).toString();
    var contentString = '<div id="content">'+
        '<div id="siteNotice">'+
        '</div>'+
        '<h1 id="firstHeading" class="firstHeading">'+vendorName+'</h1>'+
        '<div id="bodyContent">'+
        '<p>$'+amount+' was spent here.'+
        '</p>'+
        '</div>'+
        '</div>';

    var infowindow = new google.maps.InfoWindow({
        content: contentString
    });

    var marker = new google.maps.Marker({
        position: myLatlng,
        map: map,
        title: 'Uluru (Ayers Rock)'
    });
    google.maps.event.addListener(marker, 'click', function() {
      infowindow.open(map,marker);
    });
  }

  function drawMap(){
  	//remove frame
  	$("#frame-id").css("display", "none");
    //console.log('inside drawMap');
    //console.log('venuesByLocation');
    //console.log(venuesByLocation);
    venuesByLocation.forEach(function(venue, index){
      //console.log('latitude: ');
      //console.log(venue.latitude);
      //console.log('longitude: ');
      //console.log(venue.longitude);
      drawMarker(venue.latitude, venue.longitude, venue.name, venue.amount);
    });
  }

  function overlayExpenses() {
  	//append div to body
  	expenseOverlayDiv = $("#expense-overlays");
  	//expenseOverlayDiv.html("blah blah blah blah blah blah blah blah blah blah blah blah");

  	//loop over venues by location
  	count=0;
  	try {
	  	venuesByLocation.forEach(function(venue, index){
	  		count+=1;
	  		expenseOverlayDiv.append("<div class=\"expense-overlay-card\"> \
	  			<div class=\"expense-vendor\">"+venue.name+" - <span class=\"expense-address\">"+venue.address+"</span></div>\
	  			<div class=\"expense-amount\">Total amount spent: $"+parseFloat(venue.amount).toFixed(2).toString()+"</div> \
	  			</div>");
	  		if (count==5) {
	  			throw BreakException;
	  		}
	  	});
	} catch(e) {
		if (e!==BreakException) throw e;
	}


  }

  var submitLocation = function(event) {
    event.preventDefault();
    inputLocation = $('#input-location').val();
    populateVenues();
    getVenuesByLocation(inputLocation);
    console.log("venues.length: "+venues.length);

    
    waitUntil(
	  function () {
	    // the code you want to run here...
	    console.log('venueReadyCount');
    	console.log(venueReadyCount); //0, so no venues are ready...
    	initializeMap();

	    console.log("venuesByLocation: "+venuesByLocation);
	    console.log(venuesByLocation); //now defined... have to wait

	    drawMap();
	    //scroll to bottom
	    console.log($(document).height());
	    //$("body").animate({ scrollTop: $(document).height() }, 1000);
	    //$("body").animate({ scrollTop: 175 }, "slow");
	    
	    //overlay expenses
	    overlayExpenses();
	  },
	  function() {
	    // the code that tests here... (return true if test passes; false otherwise)
	    return !!(venueReadyCount==venues.length-1);
	  },
	  50 // amount to wait between checks
	)();

    
  }

  $( document ).ready(function() {
      
      $('#submit-location-button').click(submitLocation);
  });
</script>


<div class="inner">
</div>
<div class="filter">
	<ul>
		<li>Meals</li>
		<li>Entertainment</li>
		<li>Travel</li>
		<li>Transportation</li>
	</ul>
</div>
<div id="expense-overlays">
	
</div>
<div id="map-canvas"></div>

